#!/usr/bin/env sh


USAGE="feature <start|stop> [branch]"


cmd_start() {
	start "$1"
}

cmd_stop() {
	stop "$1"
}

cmd_update() {
	update "$1"
}


start() {

	validate "$1"

	local feature_branch="$(git config --global le-gitflow.branch-prefix.feature)$1"
	if git_local_branch_exists "$feature_branch"; then
		fatal "local branch '$feature_branch' already exists, what the damn hell are you doing?"
	fi

	# switch to team branch and update from the remote
	git checkout "$(git config --global le-gitflow.branch.team)"
	git pull
	
	# create the feature branch
	git checkout -b "$feature_branch"
	
	# push the feature branch to the remote
	git push --set-upstream origin "$feature_branch"
}

stop() {
	inform "stop not implemented yet... (you passed $1)"
	fatal
}

update() {

	validate "$1"

	local feature_branch="$(git config --global le-gitflow.branch-prefix.feature)$1"
	if ! git_local_branch_exists "$feature_branch"; then
		fatal "local branch '$feature_branch' does not exist, cannot update from team branch."
	fi
	local current_branch="$(git_current_branch)";
	if [[ $current_branch != $feature_branch ]]; then
		fatal "current branch ('$current_branch') is not the requested feature branch ('$feature_branch'). switch back to your feature branch before updating from the team branch."
	fi

    git merge --no-edit --no-ff "$(git config --global le-gitflow.branch.team)"
}

validate() {

	if [[ -z $1 ]]; then
		usage
	fi

	validate_initialized

	if ! git_is_clean_working_tree; then
		fatal "working tree is not clean, please make sure all changes are commited" 
	fi
}
