#!/usr/bin/env sh


USAGE="rc <start|finish> <name> [-h]"

LONG_USAGE="${t_bold}${t_fg_green}rc${t_off}
--

handle lifecycle of release-candidates.


${t_under}available actions${t_off}

   ${t_bold}start <name>${t_off}
      start a release-candidate; create a local branch and push it to the remote.
      the branch name will be composed of the pre-configured release-candidate prefix and the passed ${t_bold}name${t_off}.

   ${t_bold}finish <name>${t_off}
      finish an existing release-candidate; delete its local and remote branches, for good.
 "


cmd_start() {
	USAGE="rc start <name> [-h]"
	require_args "$1"
	io_log; create_branch_from_base "$(git_config_get "prefix.rc")$1" "$(git_config_get "branch.integration")"
	io_log; io_log_ok "release candidate '$1' is created. congrats!"; io_log
}

cmd_finish() {
	USAGE="rc finish <name> [-h]"
	require_args "$1"
	io_log; destroy_branch_from_base "$(git_config_get "prefix.rc")$1"
	io_log; io_log_ok "release candidate '$1' is finished. goodbye!"; io_log
}
