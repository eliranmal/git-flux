#!/usr/bin/env sh


USAGE="init [-h]"

LONG_USAGE="
${t_bold}init${t_off}
----

configures the git-flux environment with an interactive survey.


here are the questions you'd have to answer:

   ${t_bold}${t_fg_blue}feature${t_off}${t_bold} prefix?${t_off}
      a prefix for feature branch names, defaults to 'feature/'. 
      for example, 'foo/' will result in feature branch names like 'foo/my_awesome_feature'.

   ${t_bold}${t_fg_yellow}team${t_off}${t_bold} prefix?${t_off}
      a prefix for team branch names, defaults to 'team/'.

   ${t_bold}${t_fg_green}release candidate${t_off}${t_bold} prefix?${t_off}
      a prefix for release candidate branch names, defaults to 'rc/'.

   ${t_bold}${t_fg_red}hot-fix${t_off}${t_bold} prefix?${t_off}
      a prefix for hot-fix branch names, defaults to 'hf/'.

   ${t_bold}${t_fg_magenta}integration${t_off}${t_bold} branch?${t_off}
      the long-lived integration branch name, defaults to 'integration'. 
      this branch serves as the base to all team branches, and will be created if it does not already exist.
 "


cmd_default() {
	io_log; io_log "${t_bold}- - - - - git-flux initializer - - - - -${t_off}"; io_log

	git_config_set "initialized" false

	local prefix_delimiter="/"
	
	local feature_prefix=$(io_prompt "feature prefix" "feature$prefix_delimiter")
	local team_prefix=$(io_prompt "team prefix" "team$prefix_delimiter")
	local release_candidate_prefix=$(io_prompt "release candidate prefix" "rc$prefix_delimiter")
	local hot_fix_prefix=$(io_prompt "hot-fix prefix" "hf$prefix_delimiter")
	local integration_branch=$(io_prompt "integration branch" "integration")

	io_log; io_log_info "looking for the integration branch '$integration_branch'..."
	# no need to check the remote branch exists, we'd wanna set it as the upstream anyways
	if git_local_branch_exists "$integration_branch"; then
		io_log_ok "branch found locally" 1
		git_checkout "$integration_branch"
	else
		io_log_warn "branch not found locally" 1
		git_create_branch "$integration_branch"
	fi
	git_push_set_upstream "$integration_branch"


	git_config_set "prefix.feature" "$feature_prefix"
	git_config_set "prefix.team" "$team_prefix"
	git_config_set "prefix.rc" "$release_candidate_prefix"
	git_config_set "prefix.hf" "$hot_fix_prefix"
	git_config_set "branch.integration" "$integration_branch"
	git_config_set "initialized" true
	
	io_log; io_log_ok "all done. you're awesome!"; io_log
}
