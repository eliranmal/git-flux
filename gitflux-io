#!/usr/bin/env bash


# all those unicode characters may not show in git-bash, f*** that.
io_sign_v="✔"
io_sign_x="✘"
io_sign_i="ℹ"
io_sign_star="★"
io_sign_arrow="➤"

# shellcheck disable=SC2120
io_log() {
	io_print "   " "$@"
}

io_log_ok() {
	io_print "$(f_fg_green " $io_sign_v ")" "$@"
}

io_log_info() {
	io_print "$(f_fg_blue " $io_sign_i ")" "$@"
}

io_log_warn() {
	io_print "$(f_fg_yellow " $io_sign_x ")" "$@" >&2
}

io_log_err() {
	io_print "$(f_fg_red " $io_sign_x ")" "$@" >&2
}

io_log_star() {
	io_print "$(f_fg_blue " $io_sign_star ")" "$@"
}

io_log_banner() {
	io_print "$(f_bold "$1")"
	repeat "$(f_fg_blue "$io_sign_star")" ${#1}; io_print
}

io_log_heading() {
	f_heading "$1"; io_print
}

io_status_fatal() {
	die "$(io_log_err "$@")
" >&2
}

io_status_fatal_info() {
	die "$(io_log_info "$@")
" >&2
}

io_status_logger() {
	local indent_level=${4:-1}
	if (( $1 == 0 )); then
		# shellcheck disable=SC2086
		io_log_ok "$2" ${indent_level}
	else
		# shellcheck disable=SC2086
		io_status_fatal "$3" ${indent_level}
	fi
}

io_prompt() {
	local question="$1"
	local suggestion="$2"
	local indent_level=$3
	local indent=""
	if [[ -n $suggestion ]]; then
		question="${question} [$suggestion]"
	fi
	if [[ $indent_level =~ [123] ]]; then
		# shellcheck disable=SC2086
		indent="$(repeat "   " ${indent_level})"
	fi
	# use -p instead of sending the question to stdout, as this function will probably be 
	# called in a $(subshell), so printing to stdout won't work as expected
	read -r -p "$indent$(f_fg_yellow " $io_sign_arrow ")$question " answer
	echo "${answer:-$suggestion}"
}

io_prompt_password() {
	local question="$1"
	# use -p instead of sending the question to stdout, as this function will probably be 
	# called in a $(subshell), so printing to stdout won't work as expected
	read -r -s -p "$(f_fg_yellow " $io_sign_arrow ")$question " answer
	echo "$answer"
}

io_confirm() {
	local question="$1"
	local no_response="$2";
	local yes_response="$3";
	local exit_log_level="${4:+_$4}"
	local answer
	answer=$(io_prompt "$question (y/n)")
	if [[ $answer != "y" ]]; then
		if is_available "io_status_fatal$exit_log_level"; then
			# shellcheck disable=SC2086
			io_status_fatal${exit_log_level} "$no_response" 1
		fi
	elif [[ $yes_response ]]; then
		io_log_ok "$yes_response" 1
	else
		# shellcheck disable=SC2119
		io_log
	fi
}

io_print() {
	local margin="$1"
	local body="$2"
	local indent_level=$3
	local end_margin="$4"
	local indent=""
	if [[ $indent_level =~ [123] ]]; then
		# shellcheck disable=SC2086
		indent="$(repeat "   " ${indent_level})"
	fi
	echo "$indent$margin$body$end_margin"
}
