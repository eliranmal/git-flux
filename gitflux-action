#!/usr/bin/env sh


create_branch_from_base() {
	local branch="$1"; local default_base="$2"; local base_override="$3"
	local base_branch

	if [[ -n $base_override ]]; then
		base_branch="$base_override"
	else
		base_branch="$default_base"
	fi

	validate_git_clean_working_tree
	validate_git_local_and_remote_branches_dont_exist "$branch"
	validate_git_local_and_remote_branches_exist "$base_branch"

	git_checkout "$base_branch"
	git_pull
	git_create_branch "$branch"
	git_push_new_branch "$branch"

	# save the base to config for the 'finish' command
	git_config_set "gitflux.$(git_config_escape_subsection "branch:$branch").base" "$base_branch"
}

create_branch_from_tag() {
	local branch="$1"; local tag="$2"

	validate_git_clean_working_tree
	validate_git_local_and_remote_branches_dont_exist "$branch"
	validate_git_tag_exists "$tag"

	git_checkout "$tag"
	git_create_branch "$branch"
	git_push_new_branch "$branch"

	# save the base to config for the 'finish' command
	git_config_set "gitflux.$(git_config_escape_subsection "branch:$branch").base" "$tag"
}

destroy_branch_from_base() {
	local branch="$1"	
	local base_branch="$(git_config_get "gitflux.$(git_config_escape_subsection "branch:$branch").base")"

	validate_git_clean_working_tree
	validate_git_local_and_remote_branches_exist "$branch"
	validate_git_local_branch_exists "$base_branch"

	git_checkout "$base_branch"
	git_delete_local_branch "$branch"
	git_delete_remote_branch "$branch"

	# delete the base from config, we're not gonna need it anymore
	git_config_remove_section "gitflux.$(git_config_escape_subsection "branch:$branch")"	
}

sync_branch_with_base() {
	local branch="$1"; local base_override="$2"
	
	local base_branch
	if [[ -n $base_override ]]; then
		base_branch="$base_override"
	else
		base_branch="$(git_config_get "gitflux.$(git_config_escape_subsection "branch:$branch").base")"
	fi

	validate_git_clean_working_tree
	validate_git_local_and_remote_branches_exist "$branch"	
	validate_git_local_and_remote_branches_exist "$base_branch"

	git_checkout "$base_branch"
	git_pull
	git_checkout "$branch"
	git_pull
	git_merge "$base_branch"
}
