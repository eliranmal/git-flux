#!/usr/bin/env sh


create_branch_from_base() {

	local branch="$1"
	local base_branch="$2"
	local base_branch_override="$3"

	if [[ -n $base_branch_override ]]; then
		base_branch=$base_branch_override
	fi

	validate_git_clean_working_tree
	validate_git_local_and_remote_branches_dont_exist "$branch"
	validate_git_local_and_remote_branches_exist "$base_branch"

	git_checkout "$base_branch"
	git_pull
	git_create_branch "$branch"
	git_push_new_branch "$branch"

	# save the base to config for the 'finish' command
	git config --global gitflux-branch-base."$(git_config_escape_subsection "$branch")".ref "$base_branch"
}

destroy_branch_from_base() {

	local branch="$1"
	
	local base_branch="$(git config --global --get gitflux-branch-base."$(git_config_escape_subsection "$branch")".ref)"

	validate_git_clean_working_tree
	validate_git_local_and_remote_branches_exist "$branch"
	validate_git_local_branch_exists "$base_branch"

	git_checkout "$base_branch"
	git_delete_local_branch "$branch"
	git_delete_remote_branch "$branch"

	# delete the base from config, we're not gonna need it anymore
	git config --global --remove-section gitflux-branch-base."$(git_config_escape_subsection "$branch")"	
}

sync_branch_with_base() {

	local branch="$1"

	local base_branch="$(git config --global --get gitflux-branch-base."$(git_config_escape_subsection "$branch")".ref)"

	validate_git_clean_working_tree
	validate_git_local_and_remote_branches_exist "$branch"	
	validate_git_local_and_remote_branches_exist "$base_branch"

	git_checkout "$base_branch"
	git_pull
	git_checkout "$branch"
	git_pull
	git_merge "$base_branch"
}
