#!/usr/bin/env bash


main() {

	# redirect stderr to stdout, to ensure logs are printed anyway
	exec 2>&1

	# first, stash index and work dir, keeping only the
	# to-be-committed changes in the working directory.
	local old_stash=$(git rev-parse -q --verify refs/stash)
	save_stash
	local new_stash=$(git rev-parse -q --verify refs/stash)

	# if there were no changes (e.g., `--amend` or `--allow-empty`)
	# then nothing was stashed, and we should skip everything.
	if [ "$old_stash" = "$new_stash" ]; then
	    exit 0
	fi
	
	# get real changes
	local changed_files=$(git diff --cached --name-only --diff-filter=ACDM "$(against_revision)")

	# we want to add some changes to the staged area, unstash beforehand
	restore_stash

	# set default status as success
	local status=0
	
	# do the main goal of this hook
	render_usage_docs "$changed_files"
	status=$?

	# exit with status from the stuff we did: nonzero prevents commit
	exit $status
}

save_stash() {
	git stash save -q --keep-index
}

restore_stash() {
	# don't let internal git-stash implementation stand in our way
	git config core.whitespace -trailing-space
	# restore changes from stash
	git reset --hard -q && git stash apply --index -q && git stash drop -q
	# restore previous config
	git config --unset core.whitespace -trailing-space
}

render_usage_docs() {
	local changed_files="$1"
	# look for changes in files that are known to affect the help output
	if [[ $changed_files =~ git-flux* ]]; then
		local git_root="$(git rev-parse --show-toplevel)"
		# install git-flux from source to get the local changes in the help output
		${git_root}/bin/setup-dev.sh update || { return 1; }
		# render usage docs
		${git_root}/bin/usage.sh || { return 2; }
		# add change to index (stage area)
		git add ${git_root}/usage || { return 3; }
	fi
	return 0
}

against_revision() {
	local against
	if git rev-parse --verify HEAD >/dev/null 2>&1; then
		against=HEAD
	else
		# initial commit: diff against an empty tree object
		against=$(git hash-object -t tree /dev/null)
	fi
	printf "%s" "$against"
}


main
