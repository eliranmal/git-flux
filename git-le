#!/usr/bin/env sh

usage() {
	echo
	echo "usage: git le <sub_command>"
	echo
	echo "Available sub_commands are:"
	echo "feature <action>  feature stuff"
	echo
}

version() {
	echo
	echo "le git plugin v0.1.0"
	echo
}

main() {
	# no arguments, just show help and quit
	if [ "$#" -lt 1 ]; then
		usage; exit 1
	fi

	# retrieve the sub-command and remove it from the arguments list
	local sub_command="$1"; shift

	# handle special cases (help/version)
	case $sub_command in
		"-h"|"--help")
			usage; exit 0
			;;
		"-v"|"--version")
			version; exit 0
			;;
	esac

	local working_dir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
	
	# include common utilities
	source "$working_dir/gitle-common"

	# verify the sub-command script exists
	if [ ! -e "$working_dir/git-le-$sub_command" ]; then
		usage; exit 1
	fi

	# include the sub-command script in the current shell
	source "$working_dir/git-le-$sub_command"


	# retrieve the action and remove it from the arguments list
	local action="$1"; shift

	# verify the action exists
	if [[ -z $action || $action = "help" ]]; then
		usage; exit 0
	fi

	# verify the action function is available
	if ! exists "cmd_$action"; then
		usage; exit 1
	fi

	# delegate the sub_command to the appropriate action function
	cmd_${action} "$@"
}

main "$@"